module alu(
	//inputs
	input[31:0] A, //rs
	input[31:0] B, //rt
	input[2:0],
	
	//outputs
	output[31:0] aluOut
);

	reg st;
	reg[31:0] s;
	wire[31:0] sm;
	wire D;
	
	always @ (A or B or sel or D) begin 
			if (sel != 5)
				st <= 1'b0;
			else
				st <= 1'b1;
			if	(D) begin
				s <= m;
				st <= 1'b0;
			end
			
			case(sel)
				3'd1	:	s <= A + B;
				3'd2	:	s <= A - B;
				3'd3	:	s <= A & B;
				3'd4	:	s <= A | B;
				3'd6	:	s <= 32'bz;
			endcase
	end
	
	assign aluOut = s;
endmodule
		
				